{"version":3,"sources":["Components/Pages/Start.js","Components/Pages/ArrayQuestions.js","Components/Pages/Questions.js","App.js","index.js"],"names":["Start","className","to","Arrayquestions","question","answers","answer","isCorrect","Questions","useState","score","setScore","showScore","setShowScore","currentQuestion","setCurrentQuestion","bg","cl","resColor","setResColor","length","map","index","style","backgroundColor","color","onClick","NextQuestion","setTimeout","handleRes","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAUeA,MARf,WACA,OACI,sBAAKC,UAAU,QAAf,UACI,oDACA,cAAC,IAAD,CAAMC,GAAG,aAAT,SAAsB,sD,OCNhBC,EAAiB,CAC3B,CACIC,SAAS,4BACTC,QAAS,CACN,CAACC,OAAQ,iBAAkBC,WAAY,GACvC,CAACD,OAAQ,eAAgBC,WAAY,GACrC,CAACD,OAAQ,cAAYC,WAAY,GACjC,CAACD,OAAQ,eAAaC,WAAY,KAGzC,CACIH,SAAS,oCACTC,QAAS,CACN,CAACC,OAAQ,SAAUC,WAAY,GAC/B,CAACD,OAAQ,oBAAkBC,WAAY,GACvC,CAACD,OAAQ,SAAUC,WAAY,GAC/B,CAACD,OAAQ,sBAAoBC,WAAY,KAEhD,CACIH,SAAS,2BACTC,QAAS,CACN,CAACC,OAAQ,eAAaC,WAAY,GAClC,CAACD,OAAQ,uBAAqBC,WAAY,GAC1C,CAACD,OAAQ,0BAAwBC,WAAY,GAC7C,CAACD,OAAQ,aAAcC,WAAY,KAE1C,CACIH,SAAS,iCACTC,QAAS,CACN,CAACC,OAAQ,YAAUC,WAAY,GAC/B,CAACD,OAAQ,SAAUC,WAAY,GAC/B,CAACD,OAAQ,QAASC,WAAY,GAC9B,CAACD,OAAQ,SAAUC,WAAY,KAEtC,CACIH,SAAS,iCACTC,QAAS,CACN,CAACC,OAAQ,cAAeC,WAAY,GACpC,CAACD,OAAQ,iBAAkBC,WAAY,GACvC,CAACD,OAAQ,SAAUC,WAAY,GAC/B,CAACD,OAAQ,oBAAqBC,WAAY,MCwCtCC,MA3Ef,WACI,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA8CJ,mBAAS,GAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KACA,EAAgCN,mBAAS,CACrCO,GAAI,GACJC,GAAI,KAFR,mBAAOC,EAAP,KAAiBC,EAAjB,KA6BA,OACI,qBAAKlB,UAAU,YAAf,SACKW,EACG,sBAAKX,UAAU,eAAf,UACI,2DAEI,sBAAMA,UAAU,QAAhB,SAAyBS,IAF7B,OAIA,cAAC,IAAD,CAAMR,GAAG,IAAT,SACI,uDAIR,oCACI,8BACI,uBAAMD,UAAU,MAAhB,wBACaa,EAAkB,EAD/B,KACoC,IAC/BX,EAAeiB,YAGxB,6BAAKjB,EAAeW,GAAiBV,WACrC,qBAAKH,UAAU,OAAf,SACKE,EAAeW,GAAiBT,QAAQgB,KACrC,SAAChB,EAASiB,GAAV,OACI,wBAEIC,MAAO,CACHC,gBAAiBnB,EAAQE,UAAWW,EAASF,GAAK,IAClDS,MAAOpB,EAAQE,UAAWW,EAASD,GAAK,KAE5CS,QAAS,kBAtDzC,SAAmBnB,GACXA,GACAI,EAASD,EAAQ,GAErBS,EAAY,CACRH,GAAI,QACJC,GAAI,UAER,IAAMU,EAAeb,EAAkB,EAEvCc,YAAW,WACPT,EAAY,CACRH,GAAI,GACJC,GAAI,KAGJU,EAAexB,EAAeiB,OAC9BL,EAAmBY,GAEnBd,GAAa,KAElB,MAiCwCgB,CAAUxB,EAAQE,YANrC,SAQKF,EAAQC,QAPJgB,c,eC3C1BQ,MAdf,WACE,OACE,qBAAK7B,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACA,cAAC,IAAD,CAAO8B,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,EAAD,MAClC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,cCRjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.98c6b418.chunk.js","sourcesContent":["import {Link} from 'react-router-dom'\n\nfunction Start(){\nreturn (\n    <div className=\"Start\">\n        <h1>Bem vindo ao Quiz!</h1>\n        <Link to=\"/questions\"><button>Começar</button></Link>\n    </div>\n)   \n}\nexport default Start;   "," export const Arrayquestions = [\n    {\n        question:'Qual a capital do Brasil?',\n        answers: [\n           {answer: \"Rio de Janeiro\", isCorrect : false},\n           {answer: 'Minas Gerais', isCorrect : false},\n           {answer: 'Brasília', isCorrect : true},\n           {answer: 'São Paulo', isCorrect : false}]\n        \n    },\n    {\n        question:'O Brasil fica em qual continente?',\n        answers: [\n           {answer: 'Europa', isCorrect : false},\n           {answer: \"América do Sul\", isCorrect : true},\n           {answer: 'Africa', isCorrect : false},\n           {answer: 'América do Norte', isCorrect : false}]\n    },\n    {\n        question:'Quem descobriu o Brasil?',\n        answers: [\n           {answer: 'Os Índios', isCorrect : false},\n           {answer: \"Cristovão Colombo\", isCorrect : false},\n           {answer: 'Pedro Álvares Cabral', isCorrect : true},\n           {answer: 'D. Pedro I', isCorrect : false}]\n    },\n    {\n        question:'Qual o maior país do mundo?',\n        answers: [\n           {answer: 'Rússia', isCorrect : true},\n           {answer: \"Brasil\", isCorrect : false},\n           {answer: 'China', isCorrect : false},\n           {answer: 'Africa', isCorrect : false}]\n    },\n    {\n        question:'Qual o maior animal terrestre?',\n        answers: [\n           {answer: 'Baleia azul', isCorrect : false},\n           {answer: \"Tubarao branco\", isCorrect : false},\n           {answer: 'Girafa', isCorrect : false},\n           {answer: 'Elefante africano', isCorrect : true}]\n    }\n]\n","import React from 'react';\nimport { Arrayquestions } from './ArrayQuestions';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Questions() {\n    const [score, setScore] = useState(0);\n    const [showScore, setShowScore] = useState(false);\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [resColor, setResColor] = useState({\n        bg: '',\n        cl: '',\n    });\n\n    function handleRes(isCorrect) {\n        if (isCorrect) {\n            setScore(score + 1);\n        }\n        setResColor({\n            bg: 'green',\n            cl: 'white',\n        });\n        const NextQuestion = currentQuestion + 1;\n\n        setTimeout(() => {\n            setResColor({\n                bg: '',\n                cl: '',\n            });\n\n            if (NextQuestion < Arrayquestions.length) {\n                setCurrentQuestion(NextQuestion);\n            } else {\n                setShowScore(true);\n            }\n        }, 1500);\n    }\n\n    return (\n        <div className=\"Questions\">\n            {showScore ? (\n                <div className=\"Recomeçar\">\n                    <h1>\n                        Você conseguiu acertar\n                        <span className=\"point\">{score}</span>!\n                    </h1>\n                    <Link to=\"/\">\n                        <button>Recomeçar</button>\n                    </Link>\n                </div>\n            ) : (\n                <section>\n                    <div>\n                        <span className=\"qts\">\n                            Questão {currentQuestion + 1} /{' '}\n                            {Arrayquestions.length}\n                        </span>\n                    </div>\n                    <h1>{Arrayquestions[currentQuestion].question}</h1>\n                    <div className=\"btns\">\n                        {Arrayquestions[currentQuestion].answers.map(\n                            (answers, index) => (\n                                <button\n                                    key={index}\n                                    style={{\n                                        backgroundColor: answers.isCorrect? resColor.bg : ' ',\n                                        color: answers.isCorrect? resColor.cl : ' '\n                                    }}\n                                    onClick={() => handleRes(answers.isCorrect)}\n                                >\n                                    {answers.answer}\n                                </button>\n                            )\n                        )}\n                    </div>\n                </section>\n            )}\n        </div>\n    );\n}\nexport default Questions;\n","import Start from './Components/Pages/Start'\nimport Questions from './Components/Pages/Questions';\nimport './Components/App.css'\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\n\n\nfunction App() {\n  return (\n    <div className='App'>\n      <BrowserRouter>\n        <Routes>\n        <Route path=\"/\" element={<Start/>}/>\n        <Route path=\"/questions\" element={<Questions/>}/>\n        <Route path=\"*\" element={<Start/>}/>\n      </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}